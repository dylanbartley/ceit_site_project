TITLE: CEITDOMINICA PROJECT SQL CODE TRACK
Date Modified: July 30 2017
Time: 10:20PM

Database Name: ceitdominicaregister_dm_db

//Creating the database
create database if not exists ceitdominicaregister_dm_db;


//Select database
use ceitdominicaregister_dm_db;



//creating the table for coursebatches
create table if not exists coursebatches
(
id smallint unsigned primary key not null AUTO_INCREMENT,coursesFK smallint unsigned not null comment 'foreign key used to link the subject records from the table subjectcourses in col id',coursesStatus enum("Pending","On-Going","Closed","Cancelled") not null comment 'used to define the status of a course record',lecturerFK varchar(100) comment 'foreign key used to link the table called ceiteachers using the lecturer col',startDate date,endDate date,availableCourseSeats tinyint unsigned not null default 0 comment 'used to display to the user the available seats remaining in a particular course',maxSeats tinyint unsigned not null default 30 comment 'max seat for a particular course,this can be changed but the default is 30 if there is none defined'
);


//creating the table for batchschedule
create table if not exists batchschedule
(

batchFK smallint unsigned not null comment 'foreign key used to link to the table coursebatches id',
    timeslot tinyint unsigned default 0
);




//creating the table for studentcoursebatches
create table if not exists studentcoursebatches
(
    batchesFK smallint unsigned comment 'foreign key used to link to the table coursebatches under the col id',
    studentFK smallint unsigned comment 'foreign key used to link the table registeredstudents to the col student',
    submitDate timestamp,
    seated bit comment 'true or false, will store if the student was able to get a seat for a particular batch'
);




//creating the table for registeredstudents
create table if not EXISTS registeredstudents
(
student smallint unsigned primary key not null AUTO_INCREMENT,studentName varchar(100) not null comment 'name for the registered student both first and last name',
    studentEmail varchar(100) not null comment 'contact email for the student'
);


//creating the table for subjectcourse
create table if not exists  subjectcourse

(

id smallint unsigned primary key not null AUTO_INCREMENT comment 'id at primary key for the unique course input',
    courseName varchar(100) not null comment '[required] name of the course',
    courseSummary varchar(400) comment '[optional] usedd to provide additional detail about a course to the viewer'
);



//creating the table for ceitteachers
create table if not exists ceiteachers(

id smallint unsigned primary key not null AUTO_INCREMENT,lecturerFN varchar(30) not null default 'foo-fname' comment 'teachers first name',lecturerLN  varchar(30) not null default 'foo-fname' comment 'teachers last name',teacherGender enum("Male","Female","Unknown") not null,teacherEmail varchar(100) default '@domain.com' comment 'work contact email if available'
);